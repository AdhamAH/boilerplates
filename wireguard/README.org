#+title: WireGuard
#+property: header-args :tangle docker-compose.yml

WireGuard is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache.

** Requirements

- Forward port 51820 on your modem/router to the device ip running Wireguard.
- Create a new subdomain on your dns resolver that points to your public ip and disable proxy.
- Some locally hosted services with a WebUI might not be accessible it the firewall of the device blocks it. Allow these port on the firewall.


** Docker-compose.yml
*** Docker Image

- Docker Service Name = wireguard
- Image: Specify the docker image and behind the colon the tag used. This is the version.
- Container_name: Name that will be given to the container. If not stated, this will be randomized.

#+begin_src yaml
version: "2.1"

services:
  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard
#+end_src

*** General

- Restart: The container will always try to restart unless it is manually stopped by the user.
- Security_opt: The container will not be able to get extra privileges while it's running.
- Cap_add: Adds linux capabilities

#+begin_src yaml
    restart: unless-stopped
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
#+end_src

*** Network

- Ports: port 51820 is used by WireGuard

#+begin_src yaml
    ports:
      - 51820:51820/udp
#+end_src

*** Variables

- Environments:
  - PUID AND PGID
  - Timezone
  - Add serverurl
  - Port = 51820
  - Choose how many different devices can connect to the network
  - Optional:
    - Peerdns is useful if you have for example pihole (point to that local ip).
    - Internal subnet can be kept default.
    - Allowedip can be specified.
      - In this example everything gets tunnelled (ipv4 and ipv6).
    - Enable logging or not.
- Volumes: Multiple volumes need to be passed through or keep locally. Left volume is a local directory or file. Right volume is a directory or file inside the container.
  - Here we link the website to the container.

#+begin_src yaml
    environment:
      - PUID=<$ id -u>
      - PGID=<$ id -g>
      - TZ=Europe/Brussels
      - SERVERURL=<wildcard.domain.example>
      - SERVERPORT=51820
      - PEERS=1
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.13.13.0
      - ALLOWEDIPS=0.0.0.0/0,::/0
      - LOG_CONFS=true
    volumes:
      - </path/to/host/config>:/config
      - /lib/modules:/lib/modules
#+end_src

** Usage

- Change peers depending on how many devices you want to connect.
- Connect with computer use file located: ~</path/to/host/config>/peer<number>/peer<number>.conf~
- Generate QR to connect smartphone: ~$ docker exec -it wireguard /app/show-peer <number>~
  - Inside portainer: The terminal will also print the qr-code on initial startup
