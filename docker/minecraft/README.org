#+title: Minecraft
#+property: header-args :tangle docker-compose.yml

This docker image provides a Minecraft Server that will automatically download the latest stable version at startup. -<https://github.com/itzg/docker-minecraft-server/blob/master/README.md>

** Prerequisites

- Minecraft client (& login)

** Docker-compose.yml
*** Docker Image

- Docker Service Name = minecraft
- Image: Specify the docker image. No version behind the colon so it will use the latest version.
- Container_name: Name that will be given to the container. If not stated, this will be randomized.

#+begin_src yaml
version: '3'

services:
  minecraft:
    image: itzg/minecraft-server
    container_name: minecraft
#+end_src

*** General

- Restart: The container will always try to restart unless it is manually stopped by the user.
- Tty & stdin_open: Needed to run process in interactive mode.

#+begin_src yaml
    restart: unless-stopped
    tty: true
    stdin_open: true
#+end_src

*** Network

- Ports: 25565 is by default used for minecraft servers.

#+begin_src yaml
    ports:
      - 25565:25565
#+end_src

*** Variables

- Volumes: Multiple volumes need to be passed trough or keep locally. Left volume is a local directory or file. Right volume is a direcotry or file inside the container.
  - Minecraftdata is a volume create on docker. Needs to be created.
- Environment:
  - Accept the EULA.
  - Specify a specific type of minecraft server.
  - Admins of the server.
  - Enable whitelist or not and wether to enforce it or not.

#+begin_src yaml
    volumes:
      - minecraftdata:/data
      - </path/to/host/plugins>:/plugins
    environment:
      EULA: "TRUE"
      #TYPE: "BUKKIT"
      OPS: "<Minecraft Username>"
      ENABLE_WHITELIST: "TRUE"
      ENFORCE_WHITELIST: "TRUE"
#+end_src

*** Declared volume

- The is the colume that is declared above.
- Tell docker to use an already existing volume named minecraftdata.
  - ~$ docker volume create minecraftdata~

#+begin_src yaml
volumes:
  minecraftdata:
    external: true
#+end_src

** Usage

- Connect to server via ~<host ip>:25565~
- Change server settings.
  - Full documentation can be found on the github: https://github.com/itzg/docker-minecraft-server/blob/master/README.md
  - ~$ docker exec -i minecraft rcon-cli~  (or just use portainer to get into contrainer cli)
  - ~$ whitelist add/remove <Minecraft Username>~
  - ~$ difficulty easy/hard~
  - ...
- Backups:
  - Use backup.sh in ./scripts
  - Add to cronjob: ~$ crontab -e~
    - 0 0,12 * * * bash /./home/matthias/Server/minecraft/scripts/backup.sh -v minecraftdata -c minecraft -o </path/to/saved/backups> -r false -d 3
    - This will backup every 12h - run script - backup from volume - from container - in this location - don't delete until 3 days old
- Recover:
  - $ docker run --rm --volumes-from minecraft -v </path/to/saved/backups>:/backup bash -c "cd /data && tar xvf /backup/<name of backup> --strip 1"
    - This will remove the volume from container - create a temporary volume with the tar - go into the data folder and uncompress /backup/<name> - and strip all dirs infront of tar
